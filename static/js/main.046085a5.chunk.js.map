{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","className","alignContent","AlignContent","Center","breakpointLarge","padding","x","y","display","Display","Flex","justifyContent","JustifyContent","Between","asset","SVGAsset","LogoTwitch","width","height","type","SVGType","Brand","CoreLinkType","Inherit","fontSize","FontSize","Size4","TextType","P","margin","position","Position","Absolute","Relative","cols","default","lg","H1","size","ButtonSize","Large","alignItems","AlignItems","breakpointSmall","Size2","bold","top","Size5","alt","src","background","Background","Base","H2","Alt","elevation","bottom","H3","border","borderRadius","BorderRadius","Rounded","right","ReactDOM","render","document","getElementById","html","querySelector","classList","add"],"mappings":"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","file":"static/js/main.046085a5.chunk.js","sourcesContent":["import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport {\n  AlignContent,\n  AlignItems,\n  Background,\n  BorderRadius,\n  Button,\n  ButtonSize,\n  Column,\n  CoreImage,\n  CoreLink,\n  CoreLinkType,\n  CoreText,\n  CoreUIRoot,\n  Display,\n  FontSize,\n  Grid,\n  JustifyContent,\n  Layout,\n  Position,\n  StyledLayout,\n  SVG,\n  SVGAsset,\n  SVGType,\n  TextType,\n} from \"twitch-core-ui\";\nimport { Centered } from \"./components/centered\";\nimport { InfoBar } from \"./components/info-bar\";\n\nimport \"./App.sass\";\nimport \"twitch-core-ui/css/index.css\";\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <CoreUIRoot />\n      <StyledLayout\n        className=\"container\"\n      >\n        <Layout \n          alignContent={AlignContent.Center}\n          breakpointLarge={{ padding: { x: 4, y: 2 } }}\n          display={Display.Flex}\n          justifyContent={JustifyContent.Between}\n          padding={{ x: 2, y: 1 }}\n        >\n          <SVG asset={SVGAsset.LogoTwitch} width={188} height={64} type={SVGType.Brand} />\n          <CoreLink\n            type={CoreLinkType.Inherit}\n          >\n            <CoreText\n               fontSize={FontSize.Size4}\n               type={TextType.P}\n             >\n               Browse\n             </CoreText>\n        </CoreLink>\n        </Layout>\n        <StyledLayout\n          margin={0}\n          padding={2}\n          breakpointLarge={{ position: Position.Absolute, padding: 5, margin: 5 }}\n          position={Position.Relative}\n        >\n          <Grid>\n            <Column cols={{ default: 12, lg: 6 }}>\n              <CoreText\n                type={TextType.H1}\n              >\n                Join the Twitch UX Design Mentorship Program\n              </CoreText>\n              <Layout\n                padding={{ y: 3 }}\n              >\n                <CoreText\n                fontSize={FontSize.Size4}\n                type={TextType.P}\n              >\n                Our UX design team established this program to support aspiring POC designers for free. We want to put forth our design industry knowledge and expertise as your resource for success.\n              </CoreText>\n              </Layout>\n              <Button\n                size={ButtonSize.Large}\n              >\n                Sign Up\n              </Button>\n            </Column>\n            <Column cols={{ default: 12, lg: 6 }}>\n            <Layout \n                alignItems={AlignItems.Center}\n                display={Display.Flex}\n                justifyContent={JustifyContent.Center}\n              >\n                <StyledLayout\n                  className=\"puppers\"\n                  position={Position.Absolute}\n                >\n                  <CoreText\n                    breakpointSmall={{ fontSize: FontSize.Size2 }}\n                    bold\n                    fontSize={FontSize.Size4}\n                  >\n                    Who are we, you ask?\n                  </CoreText>\n                  <Layout \n                    breakpointSmall={{ padding: { top: 3 } }}\n                    padding={{ top: 1 }}\n                  >\n                    <CoreText\n                      breakpointSmall={{ fontSize: FontSize.Size4 }}\n                      fontSize={FontSize.Size5}\n                      type={TextType.P}\n                    >\n                      The UX design team here at Twitch consists of a group of diverse designers driven to push design boundaries and create powerful designs. Our aim is to keep each other honest, approachable, transparent, and highly collaborative while helping to frame our design philosophy.\n                    </CoreText>\n                  </Layout>\n                </StyledLayout>\n                <CoreImage\n                  alt=\"Who are we, you ask?\"\n                  className=\"pup\"\n                  src=\"glow-pup.svg\"\n                />\n              </Layout>\n            </Column>\n          </Grid>\n        </StyledLayout>\n        <StyledLayout\n          background={Background.Base}\n          breakpointLarge={{ padding: 5 }}\n          className={\"program-section\"}\n          padding={1}\n        >\n          <Layout \n            breakpointLarge={{ padding: 5 }}\n            padding={1}\n          >\n            <CoreText\n              type={TextType.H2}\n            >\n              What the program offers\n            </CoreText>\n            <Layout\n              padding={{ y: 3 }}\n            >\n              <CoreText\n                fontSize={FontSize.Size4}\n                type={TextType.P}\n              >\n                On a monthly signup basis, we are here to help aspiring designers launch their careers by answering any questions they may have about the industry, interview process, and anything in between. Students will be able to sign up and select whether they just want to receive the interview guideline packet or both the packet and one on one time with a designer!\n              </CoreText>\n            </Layout>\n            <Layout\n              padding={{ y: 5 }}\n            >\n              <Grid>\n              <Column cols={{ default: 12, lg: 4 }}>\n                <StyledLayout\n                  background={Background.Alt}\n                  elevation={2}\n                  padding={4}\n                >\n                  <Layout margin={{ bottom: 2 }}>\n                    <CoreImage\n                      src=\"trophy.svg\"\n                      alt=\"Extensive interview guideline\"\n                    />\n                  </Layout>\n                  <CoreText\n                    type={TextType.H3}\n                  >\n                    Extensive interview guideline\n                  </CoreText>\n                  <Layout\n                    padding={{ top: 3 }}\n                  >\n                    <CoreText\n                      fontSize={FontSize.Size4}\n                      type={TextType.P}\n                    >\n                      Packet written by our UX designers on interview topics including how to land an interview, portfolio building tips & tricks, things we wish we knew, and guidance on your first day on the job!\n                    </CoreText>\n                  </Layout>\n                </StyledLayout>\n              </Column>\n              <Column cols={{ default: 12, lg: 4 }}>\n                <Layout\n                  breakpointLarge={{ padding: 0 }}\n                  display={Display.Flex}\n                  justifyContent={JustifyContent.Center}\n                  padding={{ y: 4 }}\n                > \n                  <CoreImage\n                    src=\"aaand.svg\"\n                    alt=\"And\"\n                  />\n                </Layout>\n              </Column>\n              <Column cols={{ default: 12, lg: 4 }}>\n                <StyledLayout\n                  background={Background.Alt}\n                  elevation={2}\n                  padding={4}\n                >\n                  <Layout margin={{ bottom: 2 }}>\n                    <CoreImage\n                      src=\"people.svg\"\n                      alt=\"One on one mentorship\"\n                    />\n                  </Layout>\n                  <CoreText\n                    type={TextType.H3}\n                  >\n                    One on one mentorship\n                  </CoreText>\n                  <Layout\n                    padding={{ top: 3 }}\n                  >\n                    <CoreText\n                    fontSize={FontSize.Size4}\n                    type={TextType.P}\n                  >\n                    Set up dedicated meetings with a Twitch designer with anything you’d like professional help with. We’re here to talk portfolio review, industry questions, technical guidance, and anything else you’d like help with!\n                  </CoreText>\n                  </Layout>\n                </StyledLayout>\n              </Column>\n            </Grid>\n            </Layout>\n            <CoreText\n              type={TextType.H2}\n            >\n              How to sign up\n            </CoreText>\n            <Layout\n              padding={{ top: 3, bottom: 2 }}\n            >\n              <CoreText\n                fontSize={FontSize.Size4}\n                type={TextType.P}\n              > \n                Application will be open on the 1st of every month for a week on a first come first servce basis. To be conscious of the designers’ availablity, we are currently supporting [x] slots per month. \n              </CoreText>\n            </Layout>\n            <Layout \n              alignItems={AlignItems.Center}\n              display={Display.Flex}\n              margin={{ bottom: 2 }}\n            >\n              <StyledLayout\n                alignItems={AlignItems.Center}\n                border\n                borderRadius={BorderRadius.Rounded}\n                className=\"number\"\n                display={Display.Flex}\n                justifyContent={JustifyContent.Center}\n                margin={{ right: 2}}\n              >\n                <CoreText bold>1</CoreText>\n              </StyledLayout>\n              <CoreText\n                fontSize={FontSize.Size4}\n                type={TextType.P}\n              >\n                Fill out the form that tells us a bit about yourself, what you’d like help with, link to your portfolio.\n              </CoreText>\n            </Layout>\n            <Layout \n              alignItems={AlignItems.Center}\n              display={Display.Flex}\n              margin={{ bottom: 2 }}\n            >\n              <StyledLayout\n                alignItems={AlignItems.Center}\n                border\n                borderRadius={BorderRadius.Rounded}\n                className=\"number\"\n                display={Display.Flex}\n                justifyContent={JustifyContent.Center}\n                margin={{ right: 2}}\n              >\n                <CoreText bold>2</CoreText>\n              </StyledLayout>\n              <CoreText\n                fontSize={FontSize.Size4}\n                type={TextType.P}\n              >\n                Hang on and we’ll take care of the matching process. \n              </CoreText>\n            </Layout>\n            <Layout \n              alignItems={AlignItems.Center}\n              display={Display.Flex}\n              margin={{ bottom: 3 }}\n            >\n              <StyledLayout\n                alignItems={AlignItems.Center}\n                border\n                borderRadius={BorderRadius.Rounded}\n                className=\"number\"\n                display={Display.Flex}\n                justifyContent={JustifyContent.Center}\n                margin={{ right: 2}}\n              >\n                <CoreText bold>3</CoreText>\n              </StyledLayout>\n              <CoreText\n                fontSize={FontSize.Size4}\n                type={TextType.P}\n              >\n                A designer will reach out to schedule meetings with you the following week!\n            </CoreText>\n            </Layout>\n            <Button\n              size={ButtonSize.Large}\n            >\n              Sign Up\n            </Button>\n          </Layout>\n        </StyledLayout>\n      </StyledLayout>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nconst html = document.querySelector(\"html\");\n\nif (html) {\n  html.classList.add(\"tw-root--hover\");\n}\n"],"sourceRoot":""}